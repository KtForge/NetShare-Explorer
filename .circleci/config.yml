# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  android: circleci/android@2.3.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  test-report:
    machine:
      image: android:202102-01
      # To optimize build times, we recommend "large" and above for Android-related jobs
      resource_class: large
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Install OpenJDK 17
          command: |
            sudo apt-get update && sudo apt-get install openjdk-17-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
            java -version
            echo 'export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"' >> "$BASH_ENV"
      - run:
          # Export base64 encoded google-services.json
          # into local bash variables
          name: Export Google Services Json
          command: echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
      - run:
          # Decode the base64 string
          name: Decode Google Services Json
          command: echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json
      - restore_cache:
          key: android-build-{{ checksum "buildSrc/src/main/java/Versions.kt" }}-{{ checksum "buildSrc/src/main/java/Dependencies.kt" }}
      - android/start-emulator-and-run-tests:
          system-image: system-images;android-29;default;x86
          test-command: ./gradlew createTestCoverageReport
          restore-gradle-cache-post-emulator-launch: false
          save-gradle-cache: false
      - save_cache:
          paths:
            - ~/.gradle
          key: android-build-{{ checksum "buildSrc/src/main/java/Versions.kt" }}-{{ checksum "buildSrc/src/main/java/Dependencies.kt" }}
      - run:
          name: Save unit test results
          when: always
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
      - run:
          name: Save instrumentation test results
          when: always
          command: |
            mkdir -p ~/test-results/instrumentation/
            find . -type f -regex ".*/build/outputs/androidTest-results/connected/debug/**/.*xml" -exec cp {} ~/test-results/instrumentation/ \;
      - store_test_results:
          when: always
          path: ~/test-results
      - run:
          name: Save test coverage html report
          when: always
          command: |
            mkdir -p ~/test-coverage/
            cp -a build/reports/jacoco/createTestCoverageReport/html/. ~/test-coverage/
      - store_artifacts:
          when: always
          path: ~/test-coverage

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test-report:
    jobs:
      - test-report:
         context:
           - android